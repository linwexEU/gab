version: '3.7'
services:
  gab: 
    container_name: 'gab_container'
    build: 
      context: .
    ports: 
      - 8000:8000
    env_file: 
      - .env-non-dev
    command: ["/gab_docker/docker/app.sh"]
    depends_on:
      db: 
        condition: service_healthy
      redis: 
        condition: service_started
      kafka: 
        condition: service_started

  db: 
    image: postgres:16
    container_name: 'database_container'
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    env_file: 
      - .env-non-dev

  redis: 
    image: redis:7
    container_name: 'redis_container' 
    env_file: 
      - .env-non-dev 

  zookeeper: 
    image: wurstmeister/zookeeper
    container_name: "zookeeper_container"
    ports: 
      - 2181:2181
    restart: unless-stopped

  kafka: 
    image: wurstmeister/kafka 
    container_name: 'kafka_container' 
    ports: 
      - 9092:9092
      - 9093:9093
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_CREATE_TOPICS: "email_topic:4:1,notification_topic:4:1"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    depends_on:
      - zookeeper
    restart: unless-stopped